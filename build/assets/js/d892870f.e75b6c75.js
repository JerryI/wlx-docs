"use strict";(self.webpackChunkwlx_docs=self.webpackChunkwlx_docs||[]).push([[6760],{6032:(n,e,t)=>{t.r(e),t.d(e,{assets:()=>r,contentTitle:()=>l,default:()=>p,frontMatter:()=>o,metadata:()=>a,toc:()=>d});var s=t(7624),i=t(2172);const o={sidebar_position:2},l="Bouncing balls",a={id:"WLX/examples/app",title:"Bouncing balls",description:"A bouncing balls simulation, that runs in real-time and uses user's mouse to add balls to the simulation.",source:"@site/docs/WLX/examples/app.md",sourceDirName:"WLX/examples",slug:"/WLX/examples/app",permalink:"/wlx-docs/docs/WLX/examples/app",draft:!1,unlisted:!1,tags:[],version:"current",lastUpdatedAt:1708366829,formattedLastUpdatedAt:"Feb 19, 2024",sidebarPosition:2,frontMatter:{sidebar_position:2},sidebar:"tutorialSidebar",previous:{title:"File explorer & Plotter",permalink:"/wlx-docs/docs/WLX/examples/fileexplorer"},next:{title:"Asteroids",permalink:"/wlx-docs/docs/WLX/examples/asteroids"}},r={},d=[{value:"Action",id:"action",level:2},{value:"Description",id:"description",level:2}];function c(n){const e={a:"a",admonition:"admonition",code:"code",em:"em",h1:"h1",h2:"h2",img:"img",p:"p",pre:"pre",strong:"strong",...(0,i.M)(),...n.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(e.h1,{id:"bouncing-balls",children:"Bouncing balls"}),"\n",(0,s.jsx)(e.p,{children:"A bouncing balls simulation, that runs in real-time and uses user's mouse to add balls to the simulation."}),"\n",(0,s.jsxs)(e.admonition,{type:"info",children:[(0,s.jsx)(e.p,{children:"It is assumed that you have cloned git repository with examples. If not"}),(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-bash",children:"git clone https://github.com/JerryI/wl-wlx\ncd wl-wlx\n"})})]}),"\n",(0,s.jsx)(e.h2,{id:"action",children:"Action"}),"\n",(0,s.jsx)(e.p,{children:"To get the most of your attention I (@JerryI - maintainer) would like to start with a short demo of this application"}),"\n",(0,s.jsx)(e.p,{children:(0,s.jsx)(e.img,{src:t(1036).c+"",width:"466",height:"592"})}),"\n",(0,s.jsx)(e.p,{children:(0,s.jsx)(e.em,{children:"a time jitter is due to the recordings issues"})}),"\n",(0,s.jsx)(e.p,{children:"To run this demo"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-bash",children:"wolframscript -f Examples/Balls/Balls.wls\n"})}),"\n",(0,s.jsx)(e.h2,{id:"description",children:"Description"}),"\n",(0,s.jsx)(e.p,{children:"The first example uses HTTP and WS servers and dynamic mode of WLJS Interpreter. The project structure is following"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-project",children:"Balls/\t       \t\t\tpublic directory\n\tComponents/\n\t\tHead.wlx\t\theader component\n\t\tLogo.wlx\t\tlogo of WLX in svg\n\t\tToggle.wlx\t\ta custom toggle button component\n\t\tUI.wlx\t\t\tUI layout of an app\n\t\t\n\tApp.wlx\t\t\t\tactual application file with code and logic\n\tMain.wlx\t\t\tentry point of any request to an app\n\tBalls.wls \t\t\tmain startup file\n"})}),"\n",(0,s.jsxs)(e.p,{children:["This example widely uses event handling and dynamic symbols we talked about in ",(0,s.jsx)(e.a,{href:"/wlx-docs/docs/WLX/dynamics",children:"dynamics"})," section."]}),"\n",(0,s.jsxs)(e.p,{children:["Let us have a look at the ",(0,s.jsx)(e.code,{children:"Main.wlx"}),", which is an entry-point of our requests from client"]}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-mathematica",metastring:'title="Main.wlx"',children:'(* /* importing dynamic components */ *)\n\nHead       := ImportComponent["Components/Head.wlx"];\nLogo       := ImportComponent["Components/Logo.wlx"];\nApp         = ImportComponent["App.wlx"];\n\n(* /* HTML Page */ *)\nExtensionsJS = (StringJoin["/", FileNameToURLPath[#]]) &/@ WLJS`PM`Includes["js"];\nExtensionsStyles = With[{Path = FileNameToURLPath[#]},\n  <link rel="stylesheet" href="/{Path}"/> \n] &/@ WLJS`PM`Includes["styles"] // ToStringRiffle;\n\nMain[request_] := With[{\n    session = CreateUUID[],\n    controls = CreateUUID[]\n},\n\n\t{ /* highlight-start */ }\n    EventHandler[session, {"Connected" -> Function[Null,\n        Echo["Connected!"];\n        \n        With[{socket = $Client},\n            EventHandler[socket, {"Closed" -> Function[Null,\n                Echo["Closed!!!"];\n                EventFire[controls, "Destroy", True];\n            ]}];\n        ]\n    ]}];\n    { /* highlight-end */ }\n\n    <html> \n        <Head>\n            <WLJSHeader List={ExtensionsJS}/>     \n            <ExtensionsStyles/>\n            <WLJSTransportScript Port={ENV["WSPort"]} Event={session}/>\n        </Head>  \n        <body> \n            <div class="min-h-full">\n                <header class="bg-white shadow">\n                    <div class="flex items-center mx-auto max-w-7xl px-4 py-6 sm:px-6 lg:px-8">\n                        <Logo Width={"5em"}/>\n                        <h1 class="text-3xl px-5 font-bold tracking-tight text-gray-900">App</h1>\n                    </div> \n\n                </header>\n                <main>\n                    <div class="mx-auto max-w-7xl py-6 sm:px-6 lg:px-8">\n\t                    { /* highlight-next-line */ }\n                        <App Controls={controls}/>\n                    </div>\n                </main>\n            </div>\n        </body>\n    </html>\n]\n\nMain\n'})}),"\n",(0,s.jsxs)(e.p,{children:["Here it subscribes for ",(0,s.jsx)(e.code,{children:'"Closed"'})," event from connected socket and causes a global ",(0,s.jsx)(e.code,{children:'"Destroy"'})," event for ",(0,s.jsx)(e.code,{children:"App.wlx"}),". Therefore we can cancel created tasks, remove listeners once connection is lost."]}),"\n",(0,s.jsx)(e.p,{children:"In the main application file, things get more interesting"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-jsx",metastring:'title="App.wlx"',children:'(* /* ------------------------------------------------------------ */ *)\n(* /* Functions, which are global for all instances of a component */ *)\n \nappend[xy_, pos_, vel_] := With[{}, \n   If[Length[arr] > 100,\n      pos = Append[Drop[pos, 50], xy]; vel = Append[Drop[vel, 50], RandomReal[]/5.0];\n   ,\n      pos = Append[pos, xy]; vel = Append[vel, RandomReal[]/5.0];\n   ];\n]; \n\nSetAttributes[append, HoldRest];\n\n(* /* kinda many bodies sim in real time */ *)\nmanyBodySim[pos_, vels_, damphing_] := Module[{newState = pos},\n   pos = MapIndexed[With[{i = #2[[1]], y = #1[[2]]},\n      vels[[i]] = (1.0 - damphing / 10.0) vels[[i]] - Sign[y] 0.1;\n      With[{calculated = y + vels[[i]] 0.1},\n         (* /* bounce back if hit the ground */ *)\n         If[Sign[y] (calculated) < 0, \n            vels[[i]] = - vels[[i]];\n            {#1[[1]], Sign[y] 0.001}\n         ,\n            {#1[[1]], calculated}\n         ]\n      ]\n\n\n   ]&, newState];\n];\n\nSetAttributes[manyBodySim, HoldAll]\n\n(* /* Create an instance of widget */ *)\n\ncreate[globalControls_, localControls_] := Module[{\n   dots = {{0.,0.5}},\n   vels = {0.},\n   damping = 0.,\n   task = Null,\n\n   listener\n},\n\n   (*/* mouse position listener */*)\n   listener = {White, EventHandler[Rectangle[{-10, -10}, {10,10}], {"mousemove"->Function[xy, append[xy, dots, vels]]}]};\n\n   (*/* handling events from UI buttons */*)\n   EventHandler[localControls, {\n      "Gravity" -> Function[switch,\n         If[switch,\n            Echo["Task started"];\n            task = SetInterval[manyBodySim[dots, vels, damping], 1000/30.];\n         ,\n            Echo["Task ended"];\n            TaskRemove[task];\n         ]\n      ],\n\n      "Damping" -> Function[value, damping = value]\n   }];\n\n   (*/* handling global events */*)\n   EventHandler[globalControls, {"Destroy" -> Function[Null,\n      Echo["Widget removed!"];\n      Echo["Task ended"];\n      TaskRemove[task];\n   ]}];\n\n   (*/* a an output for WLJS Interpreter */*)\n   Graphics[{\n      listener, \n      RGBColor[0.1764, 0.8313, 0.74901], PointSize[0.05], Point[Offload[dots]]\n   }, Controls->True, TransitionDuration->50, PlotRange->{{-1,1}, {-1,1}}]\n];\n\n\n(* /* UI components for controls of simulation */ *)\nUI := ImportComponent["Components/UI.wlx"];\n\n(* /* ------------------------------------------------------------ */ *)\n(* /* For each request an App function is called */ *)\nApp[OptionsPattern[]] := With[{\n   globalControls = OptionValue["Controls"],\n   localControls  = CreateUUID[]\n},\n   With[{\n      PlottingDevice = create[globalControls, localControls]\n   },\n\n      <div class="divide-y divide-gray-200 max-w-lg overflow-hidden rounded-lg bg-white shadow">\n        <div class="px-4 py-5 sm:p-6">\n         <WLJS>\n            <PlottingDevice/> \n         </WLJS>\n        </div>\n        <div class="px-4 py-4 sm:px-6">\n            <UI Event={localControls}/>\n        </div>\n      </div>\n   ]\n]\n\nApp\n'})}),"\n",(0,s.jsxs)(e.p,{children:["The interesting thing here ",(0,s.jsx)(e.strong,{children:"is a mouse listener"}),", that works purely on WLJS Interpreter"]}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-mathematica",metastring:'title="app.wlx"',children:'listener = {White, EventHandler[Rectangle[{-10, -10}, {10,10}], {"mousemove"->Function[xy, append[xy, dots, vels]]}]};\n'})}),"\n",(0,s.jsxs)(e.p,{children:["This is a giant rectangle, on which an ",(0,s.jsx)(e.code,{children:"EventHandler"})," was attached, then each time you move your mouse it fires ",(0,s.jsx)(e.code,{children:"append"})," function on a server."]}),"\n",(0,s.jsx)(e.p,{children:"Once this toggle switch is pressed"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-jsx",metastring:'title="Components/UI.wlx"',children:'Event = $Options["Event"];\n\n(* /* custom built UI component */ *)\nToggleView := ImportComponent["Toggle.wlx"];\n\ngravity = CreateUUID[];\n\nEventHandler[gravity, Function[switch,\n   EventFire[Event, "Gravity", switch];\n]];\n\n(* /* a regular component from wljs-inputs lib. */ *)\nSliderControl = InputRange[0, 1, 0.1, 0, "Label"->"Damping"];\n\nEventHandler[SliderControl, Function[value,\n   EventFire[Event, "Damping", value];\n]];\n\n\n<ul role="list" class="divide-x divide-gray-100">\n    <li class="flex justify-between gap-x-6 py-1">\n       <div class="flex min-w-0 gap-x-4">\n          <div class="min-w-0 flex-auto">   \n            { /* highlight-next-line */ } \n            <ToggleView Event={gravity} Label={"Gravity"}/>\n          </div>\n       </div>\n    </li>\n\n    <li class="flex justify-between gap-x-6 py-1">\n       <div class="flex min-w-0 gap-x-4">\n          <div class="min-w-0 flex-auto">\n             <p class="text-sm font-semibold leading-6 text-gray-900">\n                <WLJS>\n                    <SliderControl/>\n                </WLJS>\n             </p>\n             <p class="mt-1 truncate text-xs leading-5 text-gray-500">Drag this slider while gravity is on</p>\n          </div>\n       </div>\n    </li>\n</ul>\n'})}),"\n",(0,s.jsx)(e.p,{children:"It fires this event handler"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-jsx",metastring:'title="App.wlx"',children:'   EventHandler[localControls, {\n   { /* highlight-next-line */ } \n      "Gravity" -> Function[switch,\n         If[switch,\n            Echo["Task started"];\n            task = SetInterval[manyBodySim[dots, vels, damping], 1000/30.];\n         ,\n            Echo["Task ended"];\n            TaskRemove[task];\n         ]\n      ],\n\n      "Damping" -> Function[value, damping = value]\n   }];\n'})}),"\n",(0,s.jsx)(e.p,{children:"which starts a task (scoped for each instance of an App), that performs calculations of dot's coordinates and velocities in a gravity field."})]})}function p(n={}){const{wrapper:e}={...(0,i.M)(),...n.components};return e?(0,s.jsx)(e,{...n,children:(0,s.jsx)(c,{...n})}):c(n)}},1036:(n,e,t)=>{t.d(e,{c:()=>s});const s=t.p+"assets/images/ezgif.com-video-to-gif-30-f61d8f28872292b5d7892068dd8be5db.gif"},2172:(n,e,t)=>{t.d(e,{I:()=>a,M:()=>l});var s=t(1504);const i={},o=s.createContext(i);function l(n){const e=s.useContext(o);return s.useMemo((function(){return"function"==typeof n?n(e):{...e,...n}}),[e,n])}function a(n){let e;return e=n.disableParentContext?"function"==typeof n.components?n.components(i):n.components||i:l(n.components),s.createElement(o.Provider,{value:e},n.children)}}}]);