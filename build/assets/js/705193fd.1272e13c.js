"use strict";(self.webpackChunkwlx_docs=self.webpackChunkwlx_docs||[]).push([[4264],{6108:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>r,default:()=>d,frontMatter:()=>s,metadata:()=>a,toc:()=>p});var i=n(7624),o=n(2172);const s={sidebar_position:1},r="File explorer & Plotter",a={id:"WLX/examples/fileexplorer",title:"File explorer & Plotter",description:"This is an example of a static App, where there is no live connection to Kernel involved, it is close to somewhat typical PHP website.",source:"@site/docs/WLX/examples/fileexplorer.md",sourceDirName:"WLX/examples",slug:"/WLX/examples/fileexplorer",permalink:"/wlx-docs/docs/WLX/examples/fileexplorer",draft:!1,unlisted:!1,tags:[],version:"current",lastUpdatedAt:1708366829,formattedLastUpdatedAt:"Feb 19, 2024",sidebarPosition:1,frontMatter:{sidebar_position:1},sidebar:"tutorialSidebar",previous:{title:"Examples",permalink:"/wlx-docs/docs/category/examples"},next:{title:"Bouncing balls",permalink:"/wlx-docs/docs/WLX/examples/app"}},l={},p=[{value:"Action",id:"action",level:2},{value:"Description",id:"description",level:2}];function c(e){const t={admonition:"admonition",code:"code",h1:"h1",h2:"h2",img:"img",p:"p",pre:"pre",strong:"strong",...(0,o.M)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(t.h1,{id:"file-explorer--plotter",children:"File explorer & Plotter"}),"\n",(0,i.jsxs)(t.p,{children:["This is an ",(0,i.jsx)(t.strong,{children:"example of a static App"}),", where there is no live connection to Kernel involved, it is close to somewhat typical PHP website."]}),"\n",(0,i.jsxs)(t.p,{children:["A file browser that can plot ",(0,i.jsx)(t.code,{children:".dat"})," files, display pictures, show text-files and list and navigate directories on your disk."]}),"\n",(0,i.jsxs)(t.admonition,{type:"info",children:[(0,i.jsx)(t.p,{children:"It is assumed that you have cloned git repository with examples. If not"}),(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-bash",children:"git clone https://github.com/JerryI/wl-wlx\ncd wl-wlx\n"})})]}),"\n",(0,i.jsx)(t.h2,{id:"action",children:"Action"}),"\n",(0,i.jsx)(t.p,{children:"To get the most of your attention we would like to start with a short demo of this application"}),"\n",(0,i.jsx)(t.p,{children:(0,i.jsx)(t.img,{src:n(2784).c+"",width:"600",height:"408"})}),"\n",(0,i.jsx)(t.p,{children:"To run this demo"}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-bash",children:"wolframscript -f Examples/Explorer/Explorer.wls\n"})}),"\n",(0,i.jsx)(t.h2,{id:"description",children:"Description"}),"\n",(0,i.jsx)(t.p,{children:"The first example uses only HTTP server and static mode of WLJS Interpreter. The project structure is following"}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-project",children:"Explorer/\t\t\t\tpublic directory\n\tViews/\n\t\tNone.wlx\t\trepresentation of non-existing file\n\t\tImage.wlx\t\tdisplay an image\n\t\tEditor.wlx\t\tdisplay a plain text\n\t\tPlot.wlx\t\tplot any data\n\t\tDirectory.wlx\tshow directory list\n\tComponents/\n\t\tHead.wlx\t\theader component\n\t\tLogo.wlx\t\tlogo of WLX in svg\n\t\tLabel.wlx\t\twrapper for labels\n\t\tBreadcrumbs.wlx\tdisplays path in a nav bar\n\t\tList.wlx\t\tforms a list of items\n\texample data/\t\tdirectory with example data to open\n\tApp.wlx\t\t\t    main layout of an app\n\tExplorer.wls \t\t\tmain startup file\n"})}),"\n",(0,i.jsxs)(t.p,{children:["A file explorer takes a path provided in URL and use it relatively to the ",(0,i.jsx)(t.code,{children:"Explorer"})," folder to depict the content"]}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-mathematica",metastring:'title="Explorer.wls"',children:'...\nApp = ImportComponent["App.wlx"];\nFileRequestQ[request_] := (!MissingQ[request["Query"]["file"]])\n\nhttp = HTTPHandler[];\n\nhttp["MessageHandler", "File"] = FileRequestQ -> ImportFile\nhttp["MessageHandler", "Index"] = AssocMatchQ[<|"Method" -> "GET"|>] -> App\n...\n'})}),"\n",(0,i.jsxs)(t.p,{children:['It is quite funny way of using URLs, since usually the path is provided by a parameter, but not as an actual url relative to the hostname. To get the "real" file it uses a bypass provided by ',(0,i.jsx)(t.code,{children:"FileRequestQ"}),", that check if ",(0,i.jsx)(t.code,{children:"file=true"})," parameter is presented."]}),"\n",(0,i.jsxs)(t.p,{children:["Any other URLs are passed to  ",(0,i.jsx)(t.code,{children:"App.wlx"}),", where it check the content and then chooses the corresponding view-component to display the data"]}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-mathematica",metastring:'title="App.wlx"',children:'dir        := ImportComponent["Views/Directory.wlx"];\neditor     := ImportComponent["Views/Editor.wlx"];\nimage      := ImportComponent["Views/Image.wlx"];\nplot       := ImportComponent["Views/Plot.wlx"];\nnone       := ImportComponent["Views/None.wlx"];\n\nBreadcrumbs := ImportComponent["Components/Breadcrumbs.wlx"];\n\n(* /* view router */ *)\n\nUnprotect[ImageQ]\n\nImageQ[path_String]    := FileExistsQ[path] && StringMatchQ[path, RegularExpression[".*\\\\.(png|jpg|svg|bmp|jpeg)$"]]\n\nDatQ[path_String]      := FileExistsQ[path] && StringMatchQ[path, RegularExpression[".*\\\\.(dat|csv)$"]]\n\nAnyQ[path_String]      := FileExistsQ[path]\n\nView[path_?DirectoryQ] := (Print["Directory!"];     dir[path]   ); \nView[path_?ImageQ]     := (Print["Image!"];         image[path] );\nView[path_?DatQ]       := (Print["Data!"];          plot[path]  );\nView[path_?AnyQ]       := (Print["Editor!"];        editor[path]);\nView[path_]            := (Print["None!"];          none[path]  );\n...\n'})}),"\n",(0,i.jsx)(t.p,{children:"For example a viewer for images looks like this"}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-jsx",metastring:'title="Views/Image.wlx"',children:'URL = URLBuild[<|"Path" -> FileNameSplit[$FirstChild], "Query" -> <|"file" -> True|>|>];\n\n<figure class="max-w-lg bg-gray-100">\n  <img class="h-auto max-w-full rounded-lg" src="/{URL}" alt="image description"/>\n</figure>\n'})}),"\n",(0,i.jsx)(t.p,{children:"Easy, ha?"}),"\n",(0,i.jsx)(t.p,{children:"To plot something it is also quite intuitive - import the data and plot using WLJS"}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-jsx",metastring:'title="Views/Plot.wlx"',children:'Data = Drop[Import[$FirstChild, "TSV"], 3];\n\nPlottingDevice = With[{p = ListLinePlot[Data, PlotRange->Full, ImageSize->700]},\n    Insert[p, Controls->True, {2,-1}]\n];\n\n<figure style="display: inline-block">\n    <WLJS Class={"h-auto max-w-full flex rounded-lg p-3 bg-gray-100"}>\n        <PlottingDevice/>\n    </WLJS>\n    <figcaption class="text-center gap-x-4 min-w-0 mt-1 text-xs leading-5 text-gray-500">Drag - pan, wheel - zoom</figcaption>\n</figure>\n'})}),"\n",(0,i.jsxs)(t.p,{children:["There is an abstraction ",(0,i.jsx)(t.code,{children:"PlottingDevice"})," used for injecting an option ",(0,i.jsx)(t.code,{children:"Controls"}),", that allows ",(0,i.jsx)(t.code,{children:"Graphics"})," object use mouse to zoom and pan the graph (options of the standard ",(0,i.jsx)(t.code,{children:"ListLinePlot"})," are protected by Wolfram Research \u2639\ufe0f )."]})]})}function d(e={}){const{wrapper:t}={...(0,o.M)(),...e.components};return t?(0,i.jsx)(t,{...e,children:(0,i.jsx)(c,{...e})}):c(e)}},2784:(e,t,n)=>{n.d(t,{c:()=>i});const i=n.p+"assets/images/ezgif.com-video-to-gif-29-a90e57e070a363d1b9282b5c598c4120.gif"},2172:(e,t,n)=>{n.d(t,{I:()=>a,M:()=>r});var i=n(1504);const o={},s=i.createContext(o);function r(e){const t=i.useContext(s);return i.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function a(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:r(e.components),i.createElement(s.Provider,{value:t},e.children)}}}]);